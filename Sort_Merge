import random
import time

def merge_sort(arr):
    if len(arr) <= 1:
        return arr
    else:
        mid = len(arr) // 2
        left_half = arr[:mid]
        right_half = arr[mid:]
        return merge(merge_sort(left_half), merge_sort(right_half))

def merge(left, right):
    merged = []
    left_index = 0
    right_index = 0

    while left_index < len(left) and right_index < len(right):
        if left[left_index] < right[right_index]:
            merged.append(left[left_index])
            left_index += 1
        else:
            merged.append(right[right_index])
            right_index += 1

    while left_index < len(left):
        merged.append(left[left_index])
        left_index += 1

    while right_index < len(right):
        merged.append(right[right_index])
        right_index += 1

    return merged

# 랜덤으로 생성된 배열
arr = random.sample(range(1, 100), 10)

# 배열 출력
print("랜덤으로 생성된 배열:", arr)

# 실행 시간 측정 코드
start_time = time.time()

# 합병 정렬 알고리즘 실행
sorted_arr = merge_sort(arr)

# 실행 시간 출력
end_time = time.time()
print(f"실행 시간: {end_time - start_time} 초")

# 정렬된 배열 출력
print("정렬된 배열:", sorted_arr)
